使用手册：这里使用的是node搭建的简单的web服务器，所以使用时需要保证你的电脑中有node，在DOM窗口中进入到node文件夹中，使用node server开启服务器，这样的话程序才可以正常运行；node中使用的端口为9191端口；当您打开服务器后，在浏览器中输入：
http://localhost:9191/project/index.html进入首页；
整个全栈一共6个页面：
index.html:
首页界面：
1、三级导航；
2、轮播图；
3、楼层效果；
4、通过ajax获取相应的数据渲染页面（在博库热推中使用的是，其余的是为了做楼层效果）
5、博库热推中的数据都可以点击，点击后会跳转到相应的详情页，这里的详情页只使用一个HTML，使用动态的加载相应的详情数据；
login.html:
登录界面：
1、使用的是node自己写的服务器，在后台中使用数组模拟的数据库，所以这里要注意：当我们重启服务器的时候，所有的用户信息都将不存在，实现了使用cookie存取多用户的相关信息，既可以实现多用户登录并且切换其相应的购物车数据；
2、使用了表单的验证；
register.html:
注册界面，使用的是node服务器；使用了表单验证；
shopcar.html:
购物车界面：
1、实现选择商品自动计算总商品数和总价格；
2、可以实现删除商品；
3、处理了全选和单选之间的问题；
list.html:
搜索框列表界面：
1、此页面是当我们在搜索框中输入搜索内容后出来数据界面（自己模拟的json数据）；
2、当我们找到数据则弹出相应的数据，并且可以点击到达详情页；
details.html:
商品详情界面：
1.包含立即购买和加入购物车按钮；
    1）、当点击立即购买时，会在判断您是否为登录状态，如果是的话，直接跳到购物车页面；如果没有登录，记录当前添加商品的id写入cookie，作为游客数据，当登录成功之后将其游客数据放入登录用户的购物车中；
    2）、当点击加入购物车的时候，也是会首先判断您是否登录；会在判断您是否为登录状态，如果是的话，将数据添加到购物车中；如果没有登录，记录当前添加商品的id写入cookie，作为游客数据，当登录成功之后将其游客数据放入登录用户的购物车中；
在整个全栈中一共使用了五个cookie数据：
user：用来记录当前用户；
tourist：用来记录当前游客的数据；保留用户点击加入购物车和立即购买的商品ID；
goodId：用来记录当前商品的id主要用来调取详情页；
userInfo：记录用户的所有信息，可以允许多个用户登录，存取多个用户及其相应的商品数据。
search:用来记录当前搜索的内容；